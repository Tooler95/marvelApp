{"version":3,"sources":["Components/CreateAccordion.js","Components/DisplayContent.js","Components/NavData.js","Components/NavBar.js","Components/search.js","App.js","index.js"],"names":["useStyles","makeStyles","createStyles","listItem","overflow","maxHeight","overflowX","backgroundColor","padding","margin","accordion","width","CreateAccordion","props","type","item","name","title","useState","expanded","setExpanded","classes","changeContent","useEffect","undefined","series","console","log","Object","keys","length","map","data","index","available","Accordion","onChange","panel","event","isExpanded","style","AccordionSummary","expandIcon","ExpandLess","color","borderTop","Typography","onClick","className","variant","float","AccordionDetails","items","List","ListItem","button","Visibility","handleClose","URI","collectionURI","displayAccordion","comics","stories","events","characters","root","flexGrow","centerElement","display","justifyContent","alignItems","dialogHead","textAlign","fontSize","fontFamily","dialog","card","position","overlayFont","top","flexContainer","flexDirection","pageBtn","opacity","transform","DisplayContent","open","setOpen","setItem","loading","setLoading","loadingImg","controls","showImages","noImage","a","url","offset","total","pageHead","Button","nextPage","SkipNext","page","prevPage","SkipPrevious","Dialog","onClose","fullWidth","maxWidth","defaultExpanded","fullName","DialogContent","Grid","container","md","DialogContentText","thumbnail","path","Card","CardMedia","component","dialogImg","image","extension","id","description","spacing","media","lg","sm","xs","CardActionArea","handleOpen","SidebarData","primary","theme","grow","breakpoints","up","search","borderRadius","shape","fade","palette","common","white","marginRight","marginBottom","marginLeft","searchIcon","height","inputRoot","inputInput","paddingLeft","transition","transitions","create","sectionDesktop","sectionMobile","NavBar","anchorEl","setAnchorEl","mobileMoreAnchorEl","setMobileMoreAnchorEl","isMenuOpen","isMobileMenuOpen","handleProfileMenuOpen","currentTarget","handleMobileMenuClose","handleMenuClose","menuId","renderMenu","Menu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","MenuItem","handleImages","hideImages","mobileMenuId","renderMobileMenu","IconButton","aria-label","aria-controls","aria-haspopup","getMediaType","value","AppBar","Toolbar","noWrap","InputBase","placeholder","input","edge","md5","require","baseUrl","publicKey","process","hash","ts","defaultSearch","axios","get","response","replace","minHeight","border","App","setControls","Search","requestedMedia","count","limit","results","zeroMinWidth","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8541f68b.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\r\nimport { ExpandLess, Visibility } from '@material-ui/icons';\r\nimport {\r\n    Typography, ListItem, List, Button,\r\n    Accordion, AccordionSummary, AccordionDetails\r\n} from '@material-ui/core';\r\n\r\n\r\nconst useStyles = makeStyles(() =>\r\n    createStyles({\r\n        listItem: {\r\n            overflow: 'scroll',\r\n            maxHeight: '10rem',\r\n            overflowX: 'hidden',\r\n            backgroundColor: 'lightgray',\r\n            padding: '0', margin: '0'\r\n        },\r\n        accordion: {\r\n            width: '100%',\r\n        },\r\n    })\r\n)\r\n\r\n\r\n\r\nexport default function CreateAccordion(props) {\r\n    const type = props.type\r\n    const item = props.item\r\n    const name = props.item.name || props.item.title\r\n    const [expanded, setExpanded] = useState(false);\r\n    const classes = useStyles();\r\n    const changeContent = props.changeContent\r\n\r\n\r\n    useEffect(() => {\r\n        {item.series !== undefined && console.log(Object.keys(item.series).length)}\r\n    })\r\n\r\n    const handleChange = (panel) => (event, isExpanded) => {\r\n        setExpanded(isExpanded ? panel : false)\r\n    }\r\n\r\n    const displayAccordion = (props) => {\r\n        const type = props.type\r\n\r\n        return (\r\n            type.map((data, index) => (\r\n                \r\n                data.data && data.data.available > 0 && data.data.available <= 20  ?\r\n                \r\n                    <Accordion key={index} expanded={expanded === index} onChange={handleChange(index)} style={{ margin: '0', padding: '0' }}>\r\n                        <AccordionSummary\r\n                            expandIcon={<ExpandLess color=\"action\" />}\r\n                            style={{borderTop: '1px solid lightgrey', backgroundColor: 'grey'}}\r\n                        >\r\n                            <Typography onClick={() => console.log(data)} className={classes.accordion} key={index} variant=\"h6\">\r\n                                <span>{data.name}</span>\r\n                                <span style={{ float: 'right' }}>({data.data.available})</span>\r\n\r\n                            </Typography>\r\n    \r\n                        </AccordionSummary>\r\n                            \r\n                        <AccordionDetails className={classes.listItem}>\r\n                            <Typography>\r\n                                {data.data.items.map((listItem, index) => (\r\n                                    <AccordionDetails key={index}>\r\n                                        <List>\r\n                                            <ListItem button >{listItem.name}</ListItem>\r\n                                            {/* onClick={() => changeContent({ item: listItem, type: data.name })} */}\r\n                                        </List>\r\n                                    </AccordionDetails>\r\n                                ))}\r\n                            </Typography>\r\n                        </AccordionDetails>\r\n                    </Accordion>\r\n\r\n                    : data.data && data.data.available !== 0 && \r\n                    <AccordionSummary\r\n                        expandIcon={<Visibility color=\"action\" />}\r\n                        style={{borderTop: '1px solid lightgrey', backgroundColor: 'grey'}}\r\n\r\n                    >\r\n                        <Typography onChange={props.handleClose} onClick={() => {changeContent({type: data.name, name: name, URI: data.data.collectionURI})}} className={classes.accordion} key={index} variant=\"h6\">\r\n                            <span>{data.name}</span>\r\n                            <span style={{ float: 'right' }}>({data.data.available})</span>\r\n                        </Typography>\r\n                    </AccordionSummary>\r\n                    \r\n            ))\r\n        )\r\n    }\r\n                if (type !== undefined) {\r\n                    // item.series !== undefined && Object.keys(item.series).length === 4 ? console.log('Right') : console.log('Wrong')\r\n                    return displayAccordion\r\n                        ({\r\n                            type:\r\n                                [\r\n                                    {\r\n                                        name: 'Comics', data: item.comics\r\n                                    },\r\n                                    {\r\n                                        name: 'Series', data: item.series\r\n                                    },\r\n                                    {\r\n                                        name: 'Stories', data: item.stories\r\n                                    },\r\n                                    {\r\n                                        name: 'Events', data: item.events\r\n                                    },\r\n                                    {\r\n                                        name: 'Characters', data: item.characters\r\n                                    }\r\n                                ]\r\n                        })\r\n                }\r\n\r\n}\r\n\r\n\r\n\r\n","import React, { useState, useEffect } from 'react'\r\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\r\nimport {SkipNext, SkipPrevious } from '@material-ui/icons';\r\nimport { Card, CardActionArea, CardMedia, Grid, Typography,\r\n         Accordion, AccordionSummary, AccordionDetails, Dialog, DialogContent,\r\n         DialogContentText, Button\r\n} from '@material-ui/core';\r\nimport CreateAccordion from './CreateAccordion'\r\n\r\n\r\nconst useStyles = makeStyles(() =>\r\n    createStyles({\r\n        root: {\r\n            flexGrow: 1,\r\n            color: 'white',\r\n        },\r\n        centerElement: {\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            alignItems: 'center'\r\n        },\r\n        listItem: {\r\n            overflow: 'scroll',\r\n            maxHeight: '10rem',\r\n            overflowX: 'hidden',\r\n            backgroundColor: 'lightgray',\r\n            padding: '0', margin: '0'\r\n        },\r\n        accordion: {\r\n            width: '100%',\r\n        },\r\n        dialogHead: {\r\n            width: '100%',\r\n            textAlign: 'center',\r\n            fontSize: '24px',\r\n            fontFamily: 'Roboto'\r\n        },\r\n        dialog: {\r\n            overflow: 'hidden'\r\n        },\r\n        card: {\r\n            position: 'relative',\r\n            margin: '1em'\r\n        },\r\n        overlayFont: {\r\n            position: \"absolute\",\r\n            top: \"40%\",\r\n            width: \"100%\",\r\n            textAlign: \"center\",\r\n            color: \"white\",\r\n            fontFamily: \"Roboto\",\r\n        },\r\n        flexContainer: {\r\n            display: 'flex',\r\n            flexDirection: 'row',\r\n            justifyContent: 'center',\r\n            padding: 0,\r\n            color: 'black',\r\n            width: '100%',\r\n        },\r\n        pageBtn: {\r\n            float: 'right',\r\n            color: 'white',\r\n            fontSize: '1em',\r\n            padding: '0'\r\n        },\r\n        card: {\r\n            opacity: '30%',\r\n            transform: 'scale(.95)'\r\n        }\r\n    })\r\n)\r\n\r\nfunction DisplayContent(props) {\r\n\r\n    const [open, setOpen] = useState(false);\r\n    const [item, setItem] = useState({});\r\n    const [loading, setLoading] = useState(false);\r\n    const [loadingImg, setLoadingImg] = useState(true)\r\n\r\n    const controls = props.controls\r\n    const showImages = controls.showImages\r\n    const data = controls.data\r\n    const classes = useStyles();\r\n    const noImage = 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available'\r\n    const placeholderImage = \"http://i.annihil.us/u/prod/marvel/i/mg/f/60/4c002e0305708\"\r\n\r\n    useEffect(async () => {\r\n        { props.controls.type === undefined ? await setLoading(true) : await setLoading(false) }\r\n    })\r\n\r\n    useEffect(() => {\r\n        (props.controls.url !== undefined) && handleClose();\r\n    },[controls.url])\r\n\r\n    const handleOpen = (props) => {\r\n         setItem(props);\r\n         setOpen(!open);\r\n\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n        setItem({})\r\n    }\r\n\r\n    const pageOptions = () => {\r\n        return (\r\n            <span className={classes.pageBtn}>\r\n                <Button className={classes.pageBtn} onClick={props.nextPage}><SkipNext fontSize=\"large\" /></Button>\r\n                <Button className={classes.pageBtn}>{props.controls.page}</Button>\r\n\r\n                {props.controls.offset !== 0 &&\r\n                    <Button className={classes.pageBtn} onClick={props.prevPage}><SkipPrevious fontSize=\"large\" /></Button>\r\n\r\n                }\r\n            </span>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Typography  variant=\"h6\">\r\n                <span>Showing {controls.offset} - {controls.offset + 18} of {controls.total} results found {controls.pageHead}</span>\r\n                {pageOptions()}\r\n            </Typography>\r\n            \r\n            <Dialog open={open} onClose={handleClose} fullWidth maxWidth=\"xs\">\r\n            {loading === false &&\r\n                <Accordion defaultExpanded style={{ margin: '0', padding: '0' }}>\r\n                    <AccordionSummary>\r\n                        <Typography className={classes.dialogHead}>{item.name || item.title || item.fullName}</Typography>\r\n                        \r\n                    </AccordionSummary>\r\n                    <AccordionDetails style={{ margin: '0', padding: '0' }} >\r\n                        <DialogContent className={classes.dialog} style={{ margin: '0', padding: '0' }}>\r\n\r\n                            <Grid container className={classes.centerElement}>\r\n                                <Grid item md={10}>\r\n                                    <DialogContentText>\r\n                                        {(item.thumbnail !== undefined && item.thumbnail !== null && item.thumbnail.path !== noImage) &&\r\n                                            <Card>\r\n                                                <CardMedia component=\"img\"\r\n                                                    className={classes.dialogImg}\r\n                                                    image={item.thumbnail.path + '/standard_incredible.' + item.thumbnail.extension}\r\n                                                    title={item.name}\r\n                                                />\r\n                                            </Card>\r\n\r\n                                        }\r\n                                    </DialogContentText>\r\n                                </Grid>\r\n                                <Grid item md={12}>\r\n                                    <DialogContentText id=\"alert-dialog-slide-description\">\r\n                                        <Typography style={{ margin: '1em' }}>{item.description}</Typography>\r\n                                    </DialogContentText>\r\n                                </Grid>\r\n                            </Grid>\r\n\r\n                        </DialogContent>\r\n                    </AccordionDetails>\r\n                </Accordion>\r\n                }\r\n                {CreateAccordion({type: controls.type, item: item, changeContent: props.changeContent})}\r\n            </Dialog>\r\n\r\n            <Grid container spacing={2}>\r\n                {(data && loading === false) ? data.map((media, index) => {\r\n                    return (\r\n                        <>\r\n                            {(media.thumbnail.path !== noImage && media.thumbnail.path !== placeholderImage || showImages === false) &&\r\n                                <Grid key={index} lg={2} md={3} sm={4} xs={6} item className={classes.items}>\r\n                                    <Card className={item.id === media.id && classes.card}>\r\n                                        <CardActionArea>\r\n                                            <CardMedia\r\n                                                component=\"img\"\r\n                                                style={loadingImg ? {} : {display: 'relative'}}\r\n                                                image={media.thumbnail.path + '/portrait_uncanny.' + media.thumbnail.extension}\r\n                                                title={media.name}\r\n                                                onClick={() => {handleOpen(media);}}\r\n                                            />\r\n                                        </CardActionArea>\r\n                                    </Card>\r\n                                    <h4 style={{ textAlign: 'center', fontFamily: 'roboto' }}>{media.name || media.title || media.fullName}</h4>\r\n                                </Grid>\r\n                            }\r\n                        </>\r\n                    )\r\n                }) :\r\n                    //Not my code, just a placeholder \r\n                    <div className=\"loaderBody\">\r\n                        <div className=\"loader\">\r\n                            <span>L</span>\r\n                            <span>O</span>\r\n                            <span>A</span>\r\n                            <span>D</span>\r\n                            <span>I</span>\r\n                            <span>N</span>\r\n                            <span>G</span>\r\n                        </div>\r\n                    </div>\r\n                }\r\n\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DisplayContent;\r\n\r\n","export const SidebarData = [\r\n    {\r\n        type: 'characters',\r\n        primary: 'Characters',\r\n    },\r\n    {\r\n        type: 'comics',\r\n        primary: 'Comics',\r\n    },\r\n    // {\r\n    //     type: 'creators',\r\n    //     primary: 'Creators',\r\n    // },\r\n    {\r\n        type: 'events',\r\n        primary: 'Events',\r\n    },\r\n    {\r\n        type: 'series',\r\n        primary: 'Series',\r\n    },\r\n    {\r\n        type: 'stories',\r\n        primary: 'Stories (broken)',\r\n    }\r\n    \r\n\r\n]","import React, {useState} from 'react';\r\nimport { fade, makeStyles } from '@material-ui/core/styles';\r\nimport {AppBar, Toolbar, IconButton, Typography, InputBase, MenuItem, Menu} from '@material-ui/core/';\r\nimport { SidebarData } from './NavData';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport Settings from '@material-ui/icons/Settings';\r\nimport MoreIcon from '@material-ui/icons/MoreVert';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  title: {\r\n    display: 'none',\r\n    [theme.breakpoints.up('sm')]: {\r\n      display: 'block',\r\n    },\r\n  },\r\n  search: {\r\n    position: 'relative',\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    '&:hover': {\r\n      backgroundColor: fade(theme.palette.common.white, 0.25),\r\n    },\r\n    marginRight: theme.spacing(2),\r\n    marginBottom: '.5em',\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      marginLeft: theme.spacing(5),\r\n      width: 'auto',\r\n    },\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 1.5),\r\n    height: '100%',\r\n    position: 'absolute',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  inputRoot: {\r\n    color: 'inherit',\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create('width'),\r\n    width: '100%',\r\n    [theme.breakpoints.up('md')]: {\r\n      width: '20ch',\r\n    },\r\n  },\r\n  sectionDesktop: {\r\n    display: 'none',\r\n    [theme.breakpoints.up('md')]: {\r\n      display: 'flex',\r\n    },\r\n  },\r\n  sectionMobile: {\r\n    display: 'flex',\r\n    [theme.breakpoints.up('md')]: {\r\n      display: 'none',\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function NavBar(props) {\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = useState(null);\r\n\r\n  const isMenuOpen = (anchorEl);\r\n  const isMobileMenuOpen = (mobileMoreAnchorEl);\r\n\r\n  const handleProfileMenuOpen = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleMobileMenuClose = () => {\r\n    setMobileMoreAnchorEl(null);\r\n  };\r\n\r\n  const handleMenuClose = () => {\r\n    setAnchorEl(null);\r\n    handleMobileMenuClose();\r\n  };\r\n\r\n  const handleMobileMenuOpen = (event) => {\r\n    setMobileMoreAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const menuId = 'primary-search-account-menu';\r\n  const renderMenu = (\r\n    <Menu\r\n      anchorEl={anchorEl}\r\n      anchorOrigin={{ vertical: 'top', horizontal: 'left' }}\r\n      id={menuId}\r\n      keepMounted\r\n      transformOrigin={{ vertical: 'top', horizontal: 'left' }}\r\n      open={isMenuOpen}\r\n      onClose={handleMenuClose}\r\n    >\r\n      <MenuItem onClick={() => {handleMenuClose(); handleImages()}}>{props.controls.showImages === true ? 'Show' : 'Hide'} content without Images</MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n  const hideImages = props.hideImages\r\n  const handleImages = () => {\r\n    hideImages(!props.controls.showImages)\r\n  }\r\n\r\n  const mobileMenuId = 'primary-search-account-menu-mobile';\r\n  const renderMobileMenu = (\r\n    <Menu\r\n      anchorEl={mobileMoreAnchorEl}\r\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      id={mobileMenuId}\r\n      keepMounted\r\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      open={isMobileMenuOpen}\r\n      onClose={handleMobileMenuClose}\r\n    >\r\n      <MenuItem onClick={handleProfileMenuOpen}>\r\n        <IconButton\r\n          aria-label=\"account of current user\"\r\n          aria-controls=\"primary-search-account-menu\"\r\n          aria-haspopup=\"true\"\r\n          color=\"inherit\"\r\n        >\r\n          <Settings />\r\n        </IconButton>\r\n        <p>Settings</p>\r\n      </MenuItem>\r\n      {SidebarData.map((item, index) => (\r\n          <MenuItem onClick={() => {handleMenuClose(); getMediaType({type: item.type, offset: 0, page: 1})}} key={index}>{item.primary}</MenuItem>\r\n      ))}\r\n      \r\n    </Menu>\r\n  );\r\n\r\n  const getMediaType = props.value\r\n\r\n  return (\r\n    <div className={classes.grow}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <Typography className={classes.title} variant=\"h6\" noWrap>\r\n            Marvel App\r\n          </Typography>\r\n          <div className={classes.search}>\r\n            <div className={classes.searchIcon}>\r\n              <SearchIcon />\r\n            </div>\r\n            <InputBase\r\n              placeholder={props.controls.type !== undefined ? 'Search ' + props.controls.type : 'Loading...'}\r\n              classes={{\r\n                root: classes.inputRoot,\r\n                input: classes.inputInput,\r\n              }}\r\n            />\r\n          </div>\r\n          {SidebarData.map((item, index) => (\r\n              <MenuItem onClick={() => getMediaType({type: item.type, offset: 0, page: 1})} key={index} className={classes.sectionDesktop}>{item.primary}</MenuItem>\r\n          ))}\r\n\r\n          <div className={classes.grow} />\r\n          <div className={classes.sectionDesktop}>\r\n          \r\n            <IconButton\r\n              edge=\"end\"\r\n              aria-label=\"account of current user\"\r\n              aria-controls={menuId}\r\n              aria-haspopup=\"true\"\r\n              onClick={handleProfileMenuOpen}\r\n              color=\"inherit\"\r\n            >\r\n              <Settings />\r\n            </IconButton>\r\n          </div>\r\n          <div className={classes.sectionMobile}>\r\n            <IconButton\r\n              aria-label=\"show more\"\r\n              aria-controls={mobileMenuId}\r\n              aria-haspopup=\"true\"\r\n              onClick={handleMobileMenuOpen}\r\n              color=\"inherit\"\r\n            >\r\n              <MoreIcon />\r\n            </IconButton>\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n      {renderMobileMenu}\r\n      {renderMenu}\r\n    </div>\r\n  );\r\n}","import axios from 'axios';\r\n\r\nconst md5 = require('md5');\r\n    const baseUrl = \"https://gateway.marvel.com:443/v1/public/\"\r\n    const publicKey = process.env.REACT_APP_PUBLIC_KEY;\r\n    const privateKey = process.env.REACT_APP_PRIVATE_KEY;\r\n    const ts = 1;\r\n    const stringToHash = ts + privateKey + publicKey;\r\n    const hash = md5(stringToHash);\r\n\r\n\r\nexport default async function search(props) {\r\n\r\n    if(props.defaultSearch === true){ //default search Meaning requesting all data for item\r\n    const type = props.type\r\n    const offset = props.offset\r\n    const url = baseUrl + type + '?offset=' + offset + '&limit=18&ts=' + ts + '&apikey=' + publicKey + '&hash=' + hash;\r\n    let response = await axios.get(url);\r\n    return response.data.data;\r\n    } else { //requesting a singular item\r\n        let url = props.url + '?offset=' + props.offset + '&limit=18&ts=' + ts + '&apikey=' + publicKey + '&hash=' + hash\r\n        url = url.replace('http', 'https')\r\n        console.log(url);\r\n        let response = await axios.get(url);\r\n        return response.data.data\r\n    }\r\n    \r\n\r\n}\r\n\r\n","import './App.css';\nimport React, {useState, useEffect} from 'react'\nimport DisplayContent from './Components/DisplayContent'\nimport NavBar from './Components/NavBar'\nimport {Grid} from '@material-ui/core';\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\nimport Search from './Components/search';\n\n\nconst useStyles = makeStyles(() =>\n    createStyles({\n        root: {\n            flexGrow: 1,\n            padding: '0em 10% 0em 10%',\n            minHeight: '100vh',\n            backgroundColor: 'black',\n        },\n        items: {\n            border: '1px solid green'\n        }\n    })\n)\n\n\nfunction App() {\n  const [controls, setControls] = useState({type: 'characters', data: [], page: 1, offset: 0, showImages: false})\n  const classes = useStyles();\n\n  useEffect(async () => {\n    controls.data.length === 0 && getMediaType({type: controls.type, offset: 0, page: controls.page})\n  }, [])\n\n  const getMediaType = async (props) => {\n        let defaultSearch;\n        props.defaultSearch === false ? defaultSearch = false : defaultSearch = true;\n        setControls({...controls, type: undefined})\n        const requestedMedia = await Search({type: props.type, offset: props.offset, defaultSearch: defaultSearch, url: props.url});\n        await setControls({...controls, type: props.type,\n                                  total: requestedMedia.total,\n                                  offset: requestedMedia.offset,\n                                  count: requestedMedia.count,\n                                  limit: requestedMedia.limit,\n                                  data: requestedMedia.results,\n                                  page: props.page,\n                                  url: props.url,\n                                  pageHead: props.pageHead\n                                });\n  }\n\n  const changeContent = async (item) => {\n    await setControls({});\n    getMediaType({type: controls.type, page: 1, offset: 0, defaultSearch: false, url: item.URI, pageHead: ' for ' + item.type + ' featuring ' + item.name})\n  }\n\n  const nextPage = async () => {\n    {controls.pageHead === undefined ?\n    await getMediaType({type: controls.type, offset: controls.offset+18, page: controls.page+1})\n    :\n    await getMediaType({type: controls.type, page: controls.page+1, offset: controls.offset+18, defaultSearch: false, url: controls.url, pageHead: controls.pageHead})\n    }\n  }\n  const prevPage = async () => {\n    await getMediaType({type: controls.type, offset: controls.offset-18, page: controls.page-1})\n  }\n  const hideImages = (props) => {\n    setControls({...controls, showImages: props})\n  }\n\n  return (\n    <>\n    <NavBar value={getMediaType} showImages={controls.showImages} hideImages={hideImages} controls={controls} />\n    {/* <SearchApi/> */}\n      <div className={classes.root}> \n          <Grid container style={{display: 'flex', justifyContent: 'center'}} spacing={2}>\n          {/* <Grid style={{padding: '0',}} sm={10} item><SideBar controls={controls} value={getMediaType} /></Grid> */}\n          <Grid zeroMinWidth item xs={12}><DisplayContent changeContent={changeContent} nextPage={nextPage} prevPage={prevPage} controls={controls} /></Grid>\n        </Grid>\n      </div>\n      </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {BrowserRouter as Router} from 'react-router-dom'\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}