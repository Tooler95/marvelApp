{"version":3,"sources":["Components/SideBarData.js","Components/SideNavBar.js","Components/SearchApi.js","Components/DisplayContent.js","Components/search.js","App.js","index.js"],"names":["SidebarData","type","primary","useStyles","makeStyles","createStyles","root","activeType","backgroundColor","types","color","header","textAlign","fontSize","fontFamily","listItems","padding","nav","margin","borderRadius","border","flexContainer","display","flexDirection","justifyContent","width","SideBar","props","classes","getMediaType","value","className","Grid","container","map","item","index","md","sm","xs","ListItem","button","onClick","offset","ListItemText","Typography","variant","controls","flexGrow","siteName","marginLeft","navbar","SearchApi","AppBar","position","Toolbar","style","centerElement","alignItems","listItem","overflow","maxHeight","overflowX","accordion","dialogHead","dialog","card","overlayFont","top","DisplayContent","useState","open","setOpen","setItem","loading","setLoading","expanded","setExpanded","hideNoImage","setHideNoImage","data","noImage","useEffect","a","undefined","changeContent","paddingBottom","Button","nextPage","prevPage","InputBase","placeholder","total","Dialog","onClose","fullWidth","maxWidth","Accordion","defaultExpanded","AccordionSummary","name","title","AccordionDetails","DialogContent","spacing","DialogContentText","thumbnail","Card","CardMedia","component","dialogImg","image","path","extension","id","description","available","onChange","panel","event","isExpanded","expandIcon","ExpandLess","float","items","List","displayAccordion","comics","stories","events","lg","CardActionArea","handleOpen","fullName","md5","require","baseUrl","publicKey","process","hash","ts","search","defaultSearch","url","axios","get","response","console","log","minHeight","App","setControls","length","Search","requestedMedia","count","limit","results","zeroMinWidth","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.24e6d0fa.chunk.js","sourcesContent":["export const SidebarData = [\r\n    {\r\n        type: 'characters',\r\n        primary: 'Characters',\r\n    },\r\n    {\r\n        type: 'comics',\r\n        primary: 'Comics',\r\n    },\r\n    {\r\n        type: 'creators',\r\n        primary: 'Creators',\r\n    },\r\n    {\r\n        type: 'events',\r\n        primary: 'Events',\r\n    },\r\n    {\r\n        type: 'series',\r\n        primary: 'Series',\r\n\r\n    },\r\n\r\n]","import React from 'react'\r\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\r\nimport { ListItem, Grid, Typography, ListItemText, InputBase, List } from '@material-ui/core';\r\nimport { SidebarData } from './SideBarData';\r\n\r\n\r\nconst useStyles = makeStyles(() =>\r\n    createStyles({\r\n        root: {\r\n            \r\n        },\r\n        activeType: {\r\n            backgroundColor: 'lightgray',\r\n        },\r\n        types: {\r\n            color: 'white',\r\n        },\r\n        header: {\r\n            textAlign: 'center',\r\n            color: 'black',\r\n            fontSize: '24px',\r\n            fontFamily: 'Roboto',\r\n        },\r\n\r\n        listItems: {\r\n            padding: '.15em',\r\n            textAlign: 'center',\r\n        },\r\n        nav: {\r\n            padding: '0',\r\n            margin: '0',\r\n            borderRadius: '1em',\r\n            border: '1px solid black'\r\n        },\r\n        flexContainer: {\r\n            display: 'flex',\r\n            flexDirection: 'row',\r\n            justifyContent: 'center',\r\n            padding: 0,\r\n            color: 'black',\r\n            width: '100%'\r\n\r\n        }\r\n    })\r\n)\r\n\r\nfunction SideBar(props) {\r\n    const classes = useStyles();\r\n    const getMediaType = props.value\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Grid container className={classes.flexContainer}>\r\n            {SidebarData.map((item, index) => (\r\n                <Grid key={index} item md={2} sm={3} xs={4}>\r\n                <ListItem className={classes.listItems} key={index} button onClick={() => getMediaType({type: item.type, offset: 0})}>\r\n                    <ListItemText\r\n                        primary={<Typography variant=\"h6\">{item.primary}</Typography>}\r\n                        className={props.controls.type === item.type ? classes.activeType : classes.types}\r\n                    />\r\n                </ListItem>\r\n                </Grid>\r\n            ))}\r\n            <ListItem>\r\n            </ListItem>\r\n                \r\n            </Grid>\r\n\r\n                \r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SideBar;","import React from 'react'\r\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\r\nimport {AppBar, Toolbar, Typography} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(() =>\r\n    createStyles({\r\n        root: {\r\n            flexGrow: 1,\r\n        },\r\n        siteName: {\r\n            fontFamily: `'Marvel'`,\r\n            fontSize: '2em',\r\n            color: 'white',\r\n            marginLeft: '10%',\r\n            padding: '0em 0em 0em 0em',\r\n        },\r\n        navbar: {\r\n            backgroundColor: '#282828', \r\n        }\r\n    })\r\n)\r\n\r\nfunction SearchApi() {\r\n\r\n    const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n        <AppBar position=\"static\" className={classes.navbar}>\r\n            <Toolbar variant=\"dense\" style={{padding: '.5em '}}>\r\n                <Typography className={classes.siteName}>Marvel Comics API</Typography>\r\n            </Toolbar>\r\n            </AppBar>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SearchApi;","import React, { useState, useEffect } from 'react'\r\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\r\nimport { ExpandLess } from '@material-ui/icons';\r\nimport {\r\n    Card, CardActionArea, CardMedia, Grid, Typography, ListItem, List,\r\n    Accordion, AccordionSummary, AccordionDetails, Dialog, DialogContent,\r\n    DialogContentText, InputBase, Button\r\n} from '@material-ui/core';\r\n\r\n\r\n\r\nconst useStyles = makeStyles(() =>\r\n    createStyles({\r\n        root: {\r\n            flexGrow: 1,\r\n            color: 'white',\r\n        },\r\n        centerElement: {\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            alignItems: 'center'\r\n        },\r\n        listItem: {\r\n            overflow: 'scroll',\r\n            maxHeight: '10rem',\r\n            overflowX: 'hidden',\r\n            backgroundColor: 'lightgray',\r\n            padding: '0', margin: '0'\r\n        },\r\n        accordion: {\r\n            width: '100%',\r\n        },\r\n        dialogHead: {\r\n            width: '100%',\r\n            textAlign: 'center',\r\n            fontSize: '24px',\r\n            fontFamily: 'Roboto'\r\n        },\r\n        dialog: {\r\n            overflow: 'hidden'\r\n        },\r\n        card: {\r\n            position: 'relative',\r\n        },\r\n        overlayFont: {\r\n            position: \"absolute\",\r\n            top: \"40%\",\r\n            width: \"100%\",\r\n            textAlign: \"center\",\r\n            color: \"white\",\r\n            fontFamily: \"Roboto\",\r\n        },\r\n        flexContainer: {\r\n            display: 'flex',\r\n            flexDirection: 'row',\r\n            justifyContent: 'center',\r\n            padding: 0,\r\n            color: 'black',\r\n            width: '100%',\r\n\r\n        }\r\n    })\r\n)\r\n\r\n\r\n\r\nfunction DisplayContent(props) {\r\n    const [open, setOpen] = useState(false);\r\n    const [item, setItem] = useState({});\r\n    const [loading, setLoading] = useState(false);\r\n    const [expanded, setExpanded] = useState(false);\r\n    const [hideNoImage, setHideNoImage] = useState(true)\r\n\r\n\r\n\r\n    const handleOpen = (props) => {\r\n        setOpen(!open);\r\n        setItem(props)\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(!open);\r\n        setItem({})\r\n    }\r\n    const handleChange = (panel) => (event, isExpanded) => {\r\n        setExpanded(isExpanded ? panel : false)\r\n    }\r\n    const data = props.controls.data\r\n    const classes = useStyles();\r\n    const noImage = 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available'\r\n    const placeholderImage = \"http://i.annihil.us/u/prod/marvel/i/mg/f/60/4c002e0305708\"\r\n\r\n\r\n    useEffect(async () => {\r\n        { props.controls.type === undefined ? await setLoading(true) : await setLoading(false) }\r\n    })\r\n\r\n    const changeContent = (item) => {\r\n        props.changeContent(item);\r\n    }\r\n\r\n    const displayAccordion = (props) => {\r\n        const type = props.type\r\n        return (\r\n            type.map((data, index) => (\r\n                data.data !== undefined && data.data.available > 0 &&\r\n                <Accordion expanded={expanded === index} onChange={handleChange(index)} style={{ margin: '0', padding: '0' }}>\r\n                    <AccordionSummary\r\n                        expandIcon={<ExpandLess />}\r\n                        style={{ backgroundColor: 'gray' }}\r\n                    >\r\n\r\n                        <Typography className={classes.accordion} key={index} variant=\"h6\">\r\n                            <span>{data.name}</span>\r\n                            <span style={{ float: 'right' }}>({data.data.available})</span>\r\n\r\n                        </Typography>\r\n                    </AccordionSummary>\r\n                    <AccordionDetails className={classes.listItem}>\r\n                        <Typography>\r\n                            {data.data !== undefined && data.data.items.map((listItem, index) => (\r\n                                <AccordionDetails key={index}>\r\n                                    <List>\r\n                                        <ListItem button onClick={() => changeContent({item: listItem, type: data.name})}>{listItem.name}</ListItem>\r\n                                    </List>\r\n                                </AccordionDetails>\r\n                            ))}\r\n                        </Typography>\r\n                    </AccordionDetails>\r\n                </Accordion>\r\n\r\n            ))\r\n        )\r\n    }\r\n\r\n    const options = () => {\r\n        return (\r\n            <Grid container style={{ paddingBottom: '2em' }}>\r\n\r\n                <Button variant=\"contained\" onClick={props.nextPage}>\r\n                    Next Page\r\n            </Button>\r\n                {props.controls.offset !== 0 &&\r\n                    <Button variant=\"contained\" onClick={props.prevPage}>\r\n                        Previous Page\r\n            </Button>\r\n                }\r\n     \r\n                <InputBase\r\n                    placeholder=\"Search…\"\r\n                    style={{ backgroundColor: 'white' }}\r\n                    classes={{\r\n                    }}\r\n                />\r\n                           <Button onClick={() => setHideNoImage(!hideNoImage)} variant=\"contained\">\r\n                    Hide {props.controls.type} with no Images\r\n            </Button>\r\n            </Grid>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            {options()}\r\n            <Typography item md={12} style={{ color: 'white', fontSize: '20px', paddingBottom: '1em' }}>\r\n                    Showing ({props.controls.offset + 1} - {props.controls.offset + 18}) of {props.controls.total} Results Found\r\n            </Typography>\r\n            <Dialog open={open} onClose={handleClose} fullWidth maxWidth=\"sm\">\r\n                <Accordion defaultExpanded style={{ margin: '0', padding: '0' }}>\r\n                    <AccordionSummary>\r\n                        <Typography className={classes.dialogHead}>{item.name || item.title}</Typography>\r\n                    </AccordionSummary>\r\n                    <AccordionDetails style={{ margin: '0', padding: '0' }} >\r\n                        <DialogContent className={classes.dialog} style={{ margin: '0', padding: '0' }}>\r\n\r\n                            <Grid container spacing={2} className={classes.centerElement}>\r\n                                <Grid item md={10}>\r\n                                    <DialogContentText>\r\n                                        {item.thumbnail !== undefined &&\r\n                                            <Card className={classes.card}>\r\n                                                <CardMedia component=\"img\"\r\n                                                    className={classes.dialogImg}\r\n                                                    image={item.thumbnail.path + '/standard_incredible.' + item.thumbnail.extension}\r\n                                                    title={item.name}\r\n                                                />\r\n                                                {item.thumbnail.path === noImage &&\r\n                                                    <Typography variant=\"h3\" className={classes.overlayFont}>\r\n                                                        {item.name || item.title}\r\n                                                    </Typography>\r\n                                                }\r\n                                            </Card>\r\n\r\n                                        }\r\n                                    </DialogContentText>\r\n                                </Grid>\r\n                                <Grid item md={12}>\r\n                                    <DialogContentText id=\"alert-dialog-slide-description\">\r\n                                        <Typography style={{ margin: '1em' }}>{item.description}</Typography>\r\n                                    </DialogContentText>\r\n                                </Grid>\r\n                            </Grid>\r\n\r\n                        </DialogContent>\r\n                    </AccordionDetails>\r\n                </Accordion>\r\n                {props.controls.type === 'characters' &&\r\n                    displayAccordion\r\n                        ({\r\n                            type:\r\n                                [\r\n                                    {\r\n                                        name: 'Comics', data: item.comics\r\n                                    },\r\n                                    {\r\n                                        name: 'Stories', data: item.stories\r\n                                    },\r\n                                    {\r\n                                        name: 'Events',data: item.events\r\n                                    }\r\n                                ]\r\n                        })\r\n                }\r\n            </Dialog>\r\n\r\n            <Grid container spacing={2}>\r\n                {(data !== undefined && loading === false) ? data.map((item, index) => {\r\n                    return (\r\n                        <>\r\n                            {(item.thumbnail.path !== noImage && item.thumbnail.path !== placeholderImage || hideNoImage === false) &&\r\n                                <Grid key={index} lg={2} md={3} sm={4} xs={6} item className={classes.items}>\r\n                                    <Card>\r\n                                        <CardActionArea>\r\n                                            <CardMedia\r\n                                                component=\"img\"\r\n                                                image={item.thumbnail.path + '/portrait_uncanny.' + item.thumbnail.extension}\r\n                                                title={item.name}\r\n                                                onClick={() => handleOpen(item)}\r\n                                            />\r\n                                            {item.thumbnail.path === noImage &&\r\n                                                <Typography variant=\"h5\"\r\n                                                            component=\"div\"\r\n                                                            className={classes.overlayFont}\r\n                                                >\r\n                                                    {item.name || item.title || item.fullName}\r\n                                                </Typography>\r\n                                            }\r\n                                        </CardActionArea>\r\n                                    </Card>\r\n                                </Grid>\r\n                            }\r\n                        </>\r\n                    )\r\n                }) :\r\n                //Not my code, just a placeholder \r\n                    <div className=\"loaderBody\"> \r\n                        <div className=\"loader\">\r\n                            <span>L</span>\r\n                            <span>O</span>\r\n                            <span>A</span>\r\n                            <span>D</span>\r\n                            <span>I</span>\r\n                            <span>N</span>\r\n                            <span>G</span>\r\n                        </div>\r\n                    </div>\r\n                }\r\n\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DisplayContent;\r\n\r\n","import axios from 'axios';\r\n\r\nconst md5 = require('md5');\r\n    const baseUrl = \"https://gateway.marvel.com:443/v1/public/\"\r\n    const publicKey = process.env.REACT_APP_PUBLIC_KEY;\r\n    const privateKey = process.env.REACT_APP_PRIVATE_KEY;\r\n    const ts = 1;\r\n    const stringToHash = ts + privateKey + publicKey;\r\n    const hash = md5(stringToHash);\r\n\r\n\r\nexport default async function search(props) {\r\n    if(props.defaultSearch === true){ //default search Meaning requesting all data for item\r\n    const type = props.type\r\n    const offset = props.offset\r\n    const url = baseUrl + type + '?offset=' + offset + '&limit=18&ts=' + ts + '&apikey=' + publicKey + '&hash=' + hash;\r\n    let response = await axios.get(url);\r\n    return response.data.data;\r\n    } else { //requesting a singular item\r\n        console.log('Searching for ' + props.type +  ' : ' + props.item.name);\r\n    }\r\n    \r\n\r\n}\r\n\r\n","import './App.css';\nimport React, {useState, useEffect, useRef} from 'react'\nimport SideBar from './Components/SideNavBar'\nimport SearchApi from './Components/SearchApi'\nimport DisplayContent from './Components/DisplayContent'\nimport {Grid} from '@material-ui/core';\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\nimport Search from './Components/search';\n\n\nconst useStyles = makeStyles(() =>\n    createStyles({\n        root: {\n            flexGrow: 1,\n            padding: '0em 10% 0em 10%',\n            minHeight: '100vh',\n            backgroundColor: 'black',\n        },\n        items: {\n            border: '1px solid green'\n        }\n    })\n)\n\n\nfunction App() {\n  const [controls, setControls] = useState({type: 'characters', data: []})\n  const classes = useStyles();\n\n  useEffect(async () => {\n    controls.data.length === 0 && getMediaType({type: controls.type, offset: 0})\n  }, [])\n\n  const getMediaType = async (props) => {\n        setControls({...controls, type: undefined})\n        const requestedMedia = await Search({type: props.type, offset: props.offset, defaultSearch: true});\n        await setControls({...controls, type: props.type,\n                                  total: requestedMedia.total,\n                                  offset: requestedMedia.offset,\n                                  count: requestedMedia.count,\n                                  limit: requestedMedia.limit,\n                                  data: requestedMedia.results\n                                });\n  }\n\n  const nextPage = () => {\n    getMediaType({type: controls.type, offset: controls.offset+18})\n  }\n  const prevPage = () => {\n    getMediaType({type: controls.type, offset: controls.offset-18})\n  }\n\n  const changeContent = async (props) => {\n    const requestContent = await Search({defaultSearch: false, item: props.item, type: props.type});\n  }\n\n  return (\n    <>\n    <SearchApi/>\n      <div className={classes.root}>\n          <Grid container style={{display: 'flex', justifyContent: 'center'}} spacing={2}>\n          <Grid style={{padding: '0',}} item xs={10}><SideBar controls={controls} value={getMediaType} /></Grid>\n          <Grid zeroMinWidth item xs={12}><DisplayContent nextPage={nextPage} prevPage={prevPage} changeContent={changeContent} controls={controls} /></Grid>\n        </Grid>\n      </div>\n      </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {BrowserRouter as Router} from 'react-router-dom'\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}